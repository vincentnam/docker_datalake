---

- import_playbook: "{{playbook_dir}}/../../base/tasks/main.yml"
  vars:
    host: metadata_management_zone_mongodb


- name : Download files
  vars_files: ../vars/main.yml
  hosts: metadata_management_zone_mongodb
  tasks:
  - name: Print all available facts
    ansible.builtin.debug:
      var: hostvars.metadata_management_zone_mongodb.BUILD_DIR
  - name: Create a build directory 
    ansible.builtin.file:
      path: "{{ hostvars.metadata_management_zone_mongodb.BUILD_DIR}}/metadata_management_zone_mongoDB"
      state: directory
      mode: "0755"
  - name: get Dockerfile for container building
    get_url:
      url : 'https://raw.githubusercontent.com/docker-library/mongo/master/{{ MONGODB_VERSION }}/Dockerfile'
      dest : '{{ hostvars.metadata_management_zone_mongodb.BUILD_DIR }}/metadata_management_zone_mongoDB/'

  - name: get docker-entrypoint.sh for container building
    get_url:
      url : 'https://raw.githubusercontent.com/docker-library/mongo/master/{{ MONGODB_VERSION }}/docker-entrypoint.sh'
      dest : '{{ hostvars.metadata_management_zone_mongodb.BUILD_DIR }}/metadata_management_zone_mongoDB/'

  - name: change script mode
    ansible.builtin.file:
      path: '{{ hostvars.metadata_management_zone_mongodb.BUILD_DIR }}/metadata_management_zone_mongoDB/docker-entrypoint.sh'
      mode: '755'
  - name: Stop and delete any container
    shell :
      cmd : "docker stop $(docker ps -a -q); docker rm $(docker ps -a -q)"
    become: yes
    ignore_errors: yes
  - name : Build MongoDB container
    shell:
      cmd: 'docker build --build-arg MONGO_PACKAGE=mongodb-enterprise --build-arg MONGO_REPO=repo.mongodb.com -t {{MONGODB_USER}}/mongo-enterprise:{{MONGODB_VERSION|lower}} .'
      chdir: '{{ hostvars.metadata_management_zone_mongodb.BUILD_DIR}}/metadata_management_zone_mongoDB/'
    become: yes
  - name: Start MongoDB container
    shell:
      cmd: 'docker run --name {{MONGODB_NAME}} -itd {{MONGODB_USER}}/mongo-enterprise:{{MONGODB_VERSION|lower}}'
      chdir: '{{ hostvars.metadata_management_zone_mongodb.BUILD_DIR}}/metadata_management_zone_mongoDB/'
    become: yes
 #- name: Create MongoDB container
  #  docker_image:
   #   name: "mongo-enterprise:{{MONGODB_VERSION|lower}}"
    #  source: "build"
     # build:
      #  pull: "yes"
       # path: "{{ hostvars.metadata_management_zone_mongodb.BUILD_DIR}}/metadata_management_zone_mongoDB/"
#        args:
 #         MONGO_PACKAGE: "mongodb-enterprise"
  #        MONGO_REPO: "repo.mongodb.com"
   # become: yes
 # - name: Run MongoDB
  #  docker_container:
  #    name: "metadata_management_system_mongodb_{{MONGODB_VERSION | lower}}"
   #   image: "mongo-enterprise:{{MONGODB_VERSION | lower}}"
    #become: yes
